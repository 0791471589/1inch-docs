"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[5753],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=i,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},26219:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var n=r(87462),i=r(63366),a=(r(67294),r(3905)),o=["components"],l={sidebar_position:4},c="Canceling a limit order",d={unversionedId:"limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq",id:"limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq",isDocsHomePage:!1,title:"Canceling a limit order",description:"It is assumed that RFQ orders will be created with a short lifetime.",source:"@site/docs/limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq.md",sourceDirName:"limit-order-protocol/utils/guide/rfq-limit-orders",slug:"/limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq",permalink:"/docs/limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq",editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Filling a RFQ order",permalink:"/docs/limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq"},next:{title:"Breaking changes in V3",permalink:"/docs/limit-order-protocol/v3-migration"}},s=[{value:"Parameters:",id:"parameters",children:[]},{value:"Creating with a typescript/javascript:",id:"creating-with-a-typescriptjavascript",children:[]},{value:"Canceling via CLI (with arguments):",id:"canceling-via-cli-with-arguments",children:[]},{value:"Canceling via CLI (through prompt):",id:"canceling-via-cli-through-prompt",children:[]}],p={toc:s};function u(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"canceling-a-limit-order"},"Canceling a limit order"),(0,a.kt)("p",null,"It is assumed that RFQ orders will be created with a short lifetime.",(0,a.kt)("br",{parentName:"p"}),"\n","But, if it becomes necessary to cancel the created RFQ order, then this can be done as follows:"),(0,a.kt)("h2",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"info")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"information about an RFQ order (see above in section ",(0,a.kt)("a",{parentName:"td",href:"./limit-order-rfq-structure"},"RFQ structure"),")")))),(0,a.kt)("h2",{id:"creating-with-a-typescriptjavascript"},"Creating with a typescript/javascript:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderProtocolFacade,\n    Web3ProviderConnector,\n    RFQOrder\n} from '@1inch/limit-order-protocol-utils';\n\nconst contractAddress = '0x7643b8c2457c1f36dc6e3b8f8e112fdf6da7698a';\nconst walletAddress = '0xd337163ef588f2ee7cdd30a3387660019be415c9';\n\nconst web3 = new Web3('...');\n// You can create and use a custom provider connector (for example: ethers)\nconst connector = new Web3ProviderConnector(web3);\n\nconst limitOrderProtocolFacade = new LimitOrderProtocolFacade(\n    contractAddress,\n    chainId,\n    connector,\n);\n\nconst RFQorder: RFQOrder = {...};\n\nconst callData = limitOrderProtocolFacade.cancelRFQOrder(RFQorder.info);\n\n// Send transaction for the RFQ order canceling\n// Must be implemented\nsendTransaction({\n    from: walletAddress,\n    gas: 50_000, // Set your gas limit\n    gasPrice: 600000000, // Set your gas price\n    to: contractAddress,\n    data: callData,\n});\n")),(0,a.kt)("h2",{id:"canceling-via-cli-with-arguments"},"Canceling via CLI (with arguments):"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"gasPrice")," - in units of GWEI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npx limit-order-rfq-utils --\\\n--operation=cancel \\\n--chainId=56 \\\n--privateKey={xxx} \\\n--gasPrice=6 \\\n--orderInfo=29941961886664662336741887180811\n")),(0,a.kt)("h2",{id:"canceling-via-cli-through-prompt"},"Canceling via CLI (through prompt):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npx limit-order-rfq-utils\n")),(0,a.kt)("p",null,"As result, you will receive a link to the transaction hash."))}u.isMDXComponent=!0}}]);